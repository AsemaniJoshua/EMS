document.addEventListener("DOMContentLoaded",(function(){initializeSettings(),loadAllData()}));let currentEditId=null,currentEditType=null;function initializeSettings(){const Toast=Swal.mixin({toast:!0,position:"top-end",showConfirmButton:!1,timer:3e3,timerProgressBar:!0});window.Toast=Toast,showTab("departments")}function showTab(tabName){document.querySelectorAll(".tab-content").forEach((tab=>tab.classList.add("hidden")));const selectedTab=document.getElementById(`content-${tabName}`);selectedTab&&selectedTab.classList.remove("hidden");document.querySelectorAll(".tab-button").forEach((button=>{button.classList.remove("active","border-emerald-500","text-emerald-600"),button.classList.add("border-transparent","text-gray-500")}));const activeButton=document.getElementById(`tab-${tabName}`);switch(activeButton&&(activeButton.classList.add("active","border-emerald-500","text-emerald-600"),activeButton.classList.remove("border-transparent","text-gray-500")),tabName){case"departments":loadDepartments();break;case"programs":loadPrograms();break;case"courses":loadCourses();break;case"levels":loadLevels();break;case"semesters":loadSemesters()}}function loadAllData(){loadDepartments(),loadPrograms(),loadCourses(),loadLevels(),loadSemesters()}function loadDepartments(){const container=document.getElementById("departments-list");container&&(container.innerHTML='<div class="flex justify-center items-center py-8"><i class="fas fa-spinner fa-spin text-2xl text-gray-400"></i><span class="ml-2 text-gray-500">Loading departments...</span></div>'),fetch("../../api/admin/settings/departments.php?action=get").then((response=>{if(!response.ok)throw new Error(`HTTP error! status: ${response.status}`);return response.json()})).then((data=>{data.success?displayDepartments(data.data):(showNotification(data.message||"Failed to load departments","error"),container&&(container.innerHTML='<div class="text-center py-8 text-red-500"><i class="fas fa-exclamation-triangle mb-2"></i><br>Failed to load departments</div>'))})).catch((error=>{console.error("Error loading departments:",error),showNotification("Error loading departments","error"),container&&(container.innerHTML='<div class="text-center py-8 text-red-500"><i class="fas fa-exclamation-triangle mb-2"></i><br>Error loading departments</div>')}))}function displayDepartments(departments){const container=document.getElementById("departments-list");container&&(0!==departments.length?container.innerHTML=departments.map((dept=>`\n        <div class="bg-white p-4 rounded-lg border border-gray-200 flex justify-between items-center">\n            <div>\n                <h3 class="font-semibold text-gray-900">${escapeHtml(dept.name)}</h3>\n                <p class="text-sm text-gray-500">${escapeHtml(dept.description||"No description")}</p>\n            </div>\n            <div class="flex space-x-2">\n                <button onclick="editDepartment(${dept.department_id})" class="text-blue-600 hover:text-blue-800">\n                    <i class="fas fa-edit"></i>\n                </button>\n                <button onclick="deleteDepartment(${dept.department_id})" class="text-red-600 hover:text-red-800">\n                    <i class="fas fa-trash"></i>\n                </button>\n            </div>\n        </div>\n    `)).join(""):container.innerHTML='<p class="text-gray-500 text-center py-4">No departments found.</p>')}function showAddDepartmentModal(){document.body.insertAdjacentHTML("beforeend",'\n        <div id="departmentModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">\n            <div class="bg-white rounded-lg p-6 w-full max-w-md">\n                <div class="flex justify-between items-center mb-4">\n                    <h3 class="text-lg font-semibold text-gray-900">Add New Department</h3>\n                    <button type="button" onclick="closeModal()" class="text-gray-400 hover:text-gray-600 focus:outline-none">\n                        <i class="fas fa-times"></i>\n                    </button>\n                </div>\n                <form id="departmentForm">\n                    <div class="mb-4">\n                        <label class="block text-sm font-medium text-gray-700 mb-2">Department Name</label>\n                        <input type="text" id="deptName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                        <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                    </div>\n                    <div class="mb-4">\n                        <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>\n                        <textarea id="deptDescription" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500"></textarea>\n                    </div>\n                    <div class="flex justify-end space-x-3">\n                        <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors">Cancel</button>\n                        <button type="submit" id="departmentSubmitBtn" class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 transition-colors flex items-center justify-center">\n                            <span>Add Department</span>\n                            <span class="ml-2 hidden spinner"><i class="fas fa-spinner fa-spin"></i></span>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    '),document.getElementById("departmentForm").addEventListener("submit",(function(e){e.preventDefault(),saveDepartment()})),setupModalCloseEvents()}function saveDepartment(){document.querySelectorAll(".error-feedback").forEach((el=>{el.classList.add("hidden"),el.textContent=""}));const nameInput=document.getElementById("deptName"),name=nameInput.value.trim(),description=document.getElementById("deptDescription").value.trim();let isValid=!0;if(name?name.length<2&&(showInputError(nameInput,"Department name must be at least 2 characters"),isValid=!1):(showInputError(nameInput,"Department name is required"),isValid=!1),!isValid)return;const data={action:currentEditId?"update":"create",name:name,description:description};currentEditId&&(data.department_id=currentEditId);const submitBtn=document.getElementById("departmentSubmitBtn"),btnText=submitBtn.querySelector("span:not(.spinner)"),spinner=submitBtn.querySelector(".spinner"),originalText=btnText.textContent;submitBtn.disabled=!0,btnText.textContent=currentEditId?"Updating...":"Saving...",spinner.classList.remove("hidden"),fetch("../../api/admin/settings/departments.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(data)}).then((response=>response.json())).then((data=>{data.success?(showNotification(data.message||"Department saved successfully","success"),closeModal(),loadDepartments(),currentEditId=null):(showNotification(data.message||"Failed to save department","error"),data.errors&&Object.keys(data.errors).forEach((field=>{const input=document.getElementById(`dept${field.charAt(0).toUpperCase()+field.slice(1)}`);input&&showInputError(input,data.errors[field])})))})).catch((error=>{console.error("Error saving department:",error),showNotification("Error saving department","error")})).finally((()=>{submitBtn.disabled=!1,btnText.textContent=originalText,spinner.classList.add("hidden")}))}function showInputError(inputElement,errorMessage){inputElement.classList.add("border-red-500"),inputElement.classList.remove("border-gray-300");const errorContainer=inputElement.nextElementSibling;if(errorContainer&&errorContainer.classList.contains("error-feedback"))errorContainer.textContent=errorMessage,errorContainer.classList.remove("hidden");else{const newErrorContainer=document.createElement("div");newErrorContainer.className="error-feedback text-red-500 text-sm mt-1",newErrorContainer.textContent=errorMessage,inputElement.parentNode.insertBefore(newErrorContainer,inputElement.nextSibling)}inputElement.focus()}function editDepartment(id){const loadingToast=showNotification("Loading department data...","info",!1);fetch(`../../api/admin/settings/departments.php?action=get&id=${id}`).then((response=>{if(!response.ok)throw new Error(`HTTP error! status: ${response.status}`);return response.json()})).then((data=>{loadingToast&&loadingToast.close&&loadingToast.close(),data.success&&data.data?(currentEditId=id,showAddDepartmentModal(),setTimeout((()=>{const nameInput=document.getElementById("deptName"),descInput=document.getElementById("deptDescription"),submitBtn=document.getElementById("departmentSubmitBtn"),submitBtnText=submitBtn.querySelector("span:not(.spinner)"),modalTitle=document.querySelector("#departmentModal h3");nameInput&&descInput&&submitBtn&&modalTitle&&(nameInput.value=data.data.name||"",descInput.value=data.data.description||"",submitBtnText.textContent="Update Department",modalTitle.textContent="Edit Department",nameInput.focus(),nameInput.select())}),100)):showNotification(data.message||"Department not found","error")})).catch((error=>{console.error("Error loading department:",error),showNotification("Error loading department","error")}))}function deleteDepartment(id){Swal.fire({title:"Are you sure?",text:"This will delete the department and may affect related data!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Yes, delete it!"}).then((result=>{result.isConfirmed&&fetch("../../api/admin/settings/departments.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"delete",department_id:id})}).then((response=>response.json())).then((data=>{data.success?(showNotification("Department deleted successfully","success"),loadDepartments()):showNotification(data.message||"Failed to delete department","error")})).catch((error=>{console.error("Error deleting department:",error),showNotification("Error deleting department","error")}))}))}function loadPrograms(){fetch("../../api/admin/settings/programs.php?action=get").then((response=>response.json())).then((data=>{data.success?displayPrograms(data.data):showNotification(data.message||"Failed to load programs","error")})).catch((error=>{console.error("Error loading programs:",error),showNotification("Error loading programs","error")}))}function displayPrograms(programs){const container=document.getElementById("programs-list");container&&(0!==programs.length?container.innerHTML=programs.map((program=>`\n        <div class="bg-white p-4 rounded-lg border border-gray-200 flex justify-between items-center">\n            <div>\n                <h3 class="font-semibold text-gray-900">${escapeHtml(program.name)}</h3>\n                <p class="text-sm text-gray-500">${escapeHtml(program.department_name)} | ${escapeHtml(program.description||"No description")}</p>\n            </div>\n            <div class="flex space-x-2">\n                <button onclick="editProgram(${program.program_id})" class="text-blue-600 hover:text-blue-800">\n                    <i class="fas fa-edit"></i>\n                </button>\n                <button onclick="deleteProgram(${program.program_id})" class="text-red-600 hover:text-red-800">\n                    <i class="fas fa-trash"></i>\n                </button>\n            </div>\n        </div>\n    `)).join(""):container.innerHTML='<p class="text-gray-500 text-center py-4">No programs found.</p>')}function showAddProgramModal(){fetch("../../api/admin/settings/departments.php?action=get").then((response=>response.json())).then((data=>{const modalHtml=`\n                <div id="programModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">\n                    <div class="bg-white rounded-lg p-6 w-full max-w-md">\n                        <h3 class="text-lg font-semibold text-gray-900 mb-4">Add New Program</h3>\n                        <form id="programForm">\n                            <div class="mb-4">\n                                <label class="block text-sm font-medium text-gray-700 mb-2">Program Name</label>\n                                <input type="text" id="programName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                            </div>\n                            <div class="mb-4">\n                                <label class="block text-sm font-medium text-gray-700 mb-2">Department</label>\n                                <select id="programDepartment" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                    <option value="">Select Department</option>\n                                    ${data.success?data.data.map((dept=>`<option value="${dept.department_id}">${escapeHtml(dept.name)}</option>`)).join(""):'<option value="">No departments available</option>'}\n                                </select>\n                            </div>\n                            <div class="mb-4">\n                                <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>\n                                <textarea id="programDescription" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500"></textarea>\n                            </div>\n                            <div class="flex justify-end space-x-3">\n                                <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300">Cancel</button>\n                                <button type="submit" class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700">Add Program</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            `;document.body.insertAdjacentHTML("beforeend",modalHtml),document.getElementById("programForm").addEventListener("submit",(function(e){e.preventDefault(),saveProgram()}))}))}function saveProgram(){document.querySelectorAll(".error-feedback").forEach((el=>{el.classList.add("hidden"),el.textContent=""}));const nameInput=document.getElementById("programName"),name=nameInput.value.trim(),departmentSelect=document.getElementById("programDepartment"),departmentId=departmentSelect.value,description=document.getElementById("programDescription").value.trim();let isValid=!0;if(name?name.length<2&&(showInputError(nameInput,"Program name must be at least 2 characters"),isValid=!1):(showInputError(nameInput,"Program name is required"),isValid=!1),departmentId||(showInputError(departmentSelect,"Department is required"),isValid=!1),!isValid)return;const data={action:currentEditId?"update":"create",name:name,department_id:departmentId,description:description};currentEditId&&(data.program_id=currentEditId);const submitBtn=document.querySelector('#programForm button[type="submit"]'),originalText=submitBtn.textContent;submitBtn.disabled=!0,submitBtn.innerHTML=`<span>${currentEditId?"Updating...":"Saving..."}</span> <i class="fas fa-spinner fa-spin ml-2"></i>`,fetch("../../api/admin/settings/programs.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(data)}).then((response=>response.json())).then((data=>{data.success?(showNotification(data.message||"Program saved successfully","success"),closeModal(),loadPrograms(),currentEditId=null):(showNotification(data.message||"Failed to save program","error"),data.errors&&Object.keys(data.errors).forEach((field=>{const input=document.getElementById(`program${field.charAt(0).toUpperCase()+field.slice(1)}`);input&&showInputError(input,data.errors[field])})))})).catch((error=>{console.error("Error saving program:",error),showNotification("Error saving program","error")})).finally((()=>{submitBtn.disabled=!1,submitBtn.innerHTML=originalText}))}function editProgram(id){const loadingToast=showNotification("Loading program data...","info",!1);fetch(`../../api/admin/settings/programs.php?action=get&id=${id}`).then((response=>{if(!response.ok)throw new Error(`HTTP error! status: ${response.status}`);return response.json()})).then((data=>{loadingToast&&loadingToast.close&&loadingToast.close(),data.success&&data.data?(currentEditId=id,fetch("../../api/admin/settings/departments.php?action=get").then((response=>response.json())).then((deptData=>{const modalHtml=`\n                            <div id="programModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">\n                                <div class="bg-white rounded-lg p-6 w-full max-w-md">\n                                    <div class="flex justify-between items-center mb-4">\n                                        <h3 class="text-lg font-semibold text-gray-900">Edit Program</h3>\n                                        <button type="button" onclick="closeModal()" class="text-gray-400 hover:text-gray-600 focus:outline-none">\n                                            <i class="fas fa-times"></i>\n                                        </button>\n                                    </div>\n                                    <form id="programForm">\n                                        <div class="mb-4">\n                                            <label class="block text-sm font-medium text-gray-700 mb-2">Program Name</label>\n                                            <input type="text" id="programName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                            <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                        </div>\n                                        <div class="mb-4">\n                                            <label class="block text-sm font-medium text-gray-700 mb-2">Department</label>\n                                            <select id="programDepartment" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                                <option value="">Select Department</option>\n                                                ${deptData.success?deptData.data.map((dept=>`<option value="${dept.department_id}">${escapeHtml(dept.name)}</option>`)).join(""):'<option value="">No departments available</option>'}\n                                            </select>\n                                            <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                        </div>\n                                        <div class="mb-4">\n                                            <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>\n                                            <textarea id="programDescription" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500"></textarea>\n                                        </div>\n                                        <div class="flex justify-end space-x-3">\n                                            <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors">Cancel</button>\n                                            <button type="submit" class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 transition-colors flex items-center justify-center">\n                                                <span>Update Program</span>\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        `;document.body.insertAdjacentHTML("beforeend",modalHtml),setupModalCloseEvents(),document.getElementById("programForm").addEventListener("submit",(function(e){e.preventDefault(),saveProgram()}));const nameInput=document.getElementById("programName"),deptSelect=document.getElementById("programDepartment"),descInput=document.getElementById("programDescription");nameInput&&deptSelect&&descInput&&(nameInput.value=data.data.name||"",deptSelect.value=data.data.department_id||"",descInput.value=data.data.description||"",nameInput.focus(),nameInput.select())}))):showNotification(data.message||"Program not found","error")})).catch((error=>{console.error("Error loading program:",error),showNotification("Error loading program","error")}))}function deleteProgram(id){Swal.fire({title:"Are you sure?",text:"This will delete the program and may affect related data!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Yes, delete it!"}).then((result=>{result.isConfirmed&&fetch("../../api/admin/settings/programs.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"delete",program_id:id})}).then((response=>response.json())).then((data=>{data.success?(showNotification(data.message||"Program deleted successfully","success"),loadPrograms()):showNotification(data.message||"Failed to delete program","error")})).catch((error=>{console.error("Error deleting program:",error),showNotification("Error deleting program","error")}))}))}function loadCourses(){fetch("../../api/admin/settings/courses.php?action=get").then((response=>response.json())).then((data=>{data.success?displayCourses(data.data):showNotification(data.message||"Failed to load courses","error")})).catch((error=>{console.error("Error loading courses:",error),showNotification("Error loading courses","error")}))}function displayCourses(courses){const container=document.getElementById("courses-list");container&&(0!==courses.length?container.innerHTML=courses.map((course=>`\n        <div class="bg-white p-4 rounded-lg border border-gray-200 flex justify-between items-center">\n            <div>\n                <h3 class="font-semibold text-gray-900">${escapeHtml(course.code)} - ${escapeHtml(course.title)}</h3>\n                <p class="text-sm text-gray-500">${escapeHtml(course.department_name)} | ${escapeHtml(course.program_name)} | Credits: ${course.credits}</p>\n            </div>\n            <div class="flex space-x-2">\n                <button onclick="editCourse(${course.course_id})" class="text-blue-600 hover:text-blue-800">\n                    <i class="fas fa-edit"></i>\n                </button>\n                <button onclick="deleteCourse(${course.course_id})" class="text-red-600 hover:text-red-800">\n                    <i class="fas fa-trash"></i>\n                </button>\n            </div>\n        </div>\n    `)).join(""):container.innerHTML='<p class="text-gray-500 text-center py-4">No courses found.</p>')}function showAddCourseModal(){Promise.all([fetch("../../api/admin/settings/departments.php?action=get").then((r=>r.json())),fetch("../../api/admin/settings/programs.php?action=get").then((r=>r.json())),fetch("../../api/admin/settings/levels.php?action=get").then((r=>r.json())),fetch("../../api/admin/settings/semesters.php?action=get").then((r=>r.json()))]).then((([deptData,progData,levelData,semData])=>{const modalHtml=`\n            <div id="courseModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">\n                <div class="bg-white rounded-lg p-6 w-full max-w-lg">\n                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Add New Course</h3>\n                    <form id="courseForm">\n                        <div class="grid grid-cols-2 gap-4 mb-4">\n                            <div>\n                                <label class="block text-sm font-medium text-gray-700 mb-2">Course Code</label>\n                                <input type="text" id="courseCode" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                            </div>\n                            <div>\n                                <label class="block text-sm font-medium text-gray-700 mb-2">Credits</label>\n                                <input type="number" id="courseCredits" min="1" max="10" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                            </div>\n                        </div>\n                        <div class="mb-4">\n                            <label class="block text-sm font-medium text-gray-700 mb-2">Course Title</label>\n                            <input type="text" id="courseTitle" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                        </div>\n                        <div class="grid grid-cols-2 gap-4 mb-4">\n                            <div>\n                                <label class="block text-sm font-medium text-gray-700 mb-2">Department</label>\n                                <select id="courseDepartment" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                    <option value="">Select Department</option>\n                                    ${deptData.success?deptData.data.map((dept=>`<option value="${dept.department_id}">${escapeHtml(dept.name)}</option>`)).join(""):""}\n                                </select>\n                            </div>\n                            <div>\n                                <label class="block text-sm font-medium text-gray-700 mb-2">Program</label>\n                                <select id="courseProgram" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                    <option value="">Select Program</option>\n                                    ${progData.success?progData.data.map((prog=>`<option value="${prog.program_id}">${escapeHtml(prog.name)}</option>`)).join(""):""}\n                                </select>\n                            </div>\n                        </div>\n                        <div class="grid grid-cols-2 gap-4 mb-4">\n                            <div>\n                                <label class="block text-sm font-medium text-gray-700 mb-2">Level</label>\n                                <select id="courseLevel" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                    <option value="">Select Level</option>\n                                    ${levelData.success?levelData.data.map((level=>`<option value="${level.level_id}">${escapeHtml(level.name)}</option>`)).join(""):""}\n                                </select>\n                            </div>\n                            <div>\n                                <label class="block text-sm font-medium text-gray-700 mb-2">Semester</label>\n                                <select id="courseSemester" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                    <option value="">Select Semester</option>\n                                    ${semData.success?semData.data.map((sem=>`<option value="${sem.semester_id}">${escapeHtml(sem.name)}</option>`)).join(""):""}\n                                </select>\n                            </div>\n                        </div>\n                        <div class="flex justify-end space-x-3">\n                            <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300">Cancel</button>\n                            <button type="submit" class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700">Add Course</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        `;document.body.insertAdjacentHTML("beforeend",modalHtml),document.getElementById("courseForm").addEventListener("submit",(function(e){e.preventDefault(),saveCourse()}))}))}function saveCourse(){const data={action:currentEditId?"update":"create",code:document.getElementById("courseCode").value,title:document.getElementById("courseTitle").value,department_id:document.getElementById("courseDepartment").value,program_id:document.getElementById("courseProgram").value,level_id:document.getElementById("courseLevel").value,semester_id:document.getElementById("courseSemester").value,credits:document.getElementById("courseCredits").value};currentEditId&&(data.course_id=currentEditId),fetch("../../api/admin/settings/courses.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(data)}).then((response=>response.json())).then((data=>{data.success?(showNotification(data.message||"Course saved successfully","success"),closeModal(),loadCourses(),currentEditId=null):showNotification(data.message||"Failed to save course","error")})).catch((error=>{console.error("Error saving course:",error),showNotification("Error saving course","error")}))}function editCourse(id){const loadingToast=showNotification("Loading course data...","info",!1);fetch(`../../api/admin/settings/courses.php?action=get&id=${id}`).then((response=>response.json())).then((data=>{if(loadingToast&&loadingToast.close&&loadingToast.close(),!data.success||!data.data)return void showNotification(data.message||"Failed to load course","error");currentEditId=id;const course=data.data;Promise.all([fetch("../../api/admin/settings/departments.php?action=get").then((r=>r.json())),fetch("../../api/admin/settings/programs.php?action=get").then((r=>r.json())),fetch("../../api/admin/settings/levels.php?action=get").then((r=>r.json())),fetch("../../api/admin/settings/semesters.php?action=get").then((r=>r.json()))]).then((([deptData,progData,levelData,semData])=>{const modalHtml=`\n                    <div id="courseModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">\n                        <div class="bg-white rounded-lg p-6 w-full max-w-lg">\n                            <div class="flex justify-between items-center mb-4">\n                                <h3 class="text-lg font-semibold text-gray-900">Edit Course</h3>\n                                <button type="button" onclick="closeModal()" class="text-gray-400 hover:text-gray-600 focus:outline-none">\n                                    <i class="fas fa-times"></i>\n                                </button>\n                            </div>\n                            <form id="courseForm">\n                                <div class="grid grid-cols-2 gap-4 mb-4">\n                                    <div>\n                                        <label class="block text-sm font-medium text-gray-700 mb-2">Course Code</label>\n                                        <input type="text" id="courseCode" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                        <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                    </div>\n                                    <div>\n                                        <label class="block text-sm font-medium text-gray-700 mb-2">Credits</label>\n                                        <input type="number" id="courseCredits" min="1" max="10" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                        <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                    </div>\n                                </div>\n                                <div class="mb-4">\n                                    <label class="block text-sm font-medium text-gray-700 mb-2">Course Title</label>\n                                    <input type="text" id="courseTitle" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                    <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                </div>\n                                <div class="grid grid-cols-2 gap-4 mb-4">\n                                    <div>\n                                        <label class="block text-sm font-medium text-gray-700 mb-2">Department</label>\n                                        <select id="courseDepartment" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                            <option value="">Select Department</option>\n                                            ${deptData.success?deptData.data.map((dept=>`<option value="${dept.department_id}">${escapeHtml(dept.name)}</option>`)).join(""):""}\n                                        </select>\n                                        <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                    </div>\n                                    <div>\n                                        <label class="block text-sm font-medium text-gray-700 mb-2">Program</label>\n                                        <select id="courseProgram" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                            <option value="">Select Program</option>\n                                            ${progData.success?progData.data.map((prog=>`<option value="${prog.program_id}">${escapeHtml(prog.name)}</option>`)).join(""):""}\n                                        </select>\n                                        <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                    </div>\n                                </div>\n                                <div class="grid grid-cols-2 gap-4 mb-4">\n                                    <div>\n                                        <label class="block text-sm font-medium text-gray-700 mb-2">Level</label>\n                                        <select id="courseLevel" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                            <option value="">Select Level</option>\n                                            ${levelData.success?levelData.data.map((level=>`<option value="${level.level_id}">${escapeHtml(level.name)}</option>`)).join(""):""}\n                                        </select>\n                                        <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                    </div>\n                                    <div>\n                                        <label class="block text-sm font-medium text-gray-700 mb-2">Semester</label>\n                                        <select id="courseSemester" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                            <option value="">Select Semester</option>\n                                            ${semData.success?semData.data.map((sem=>`<option value="${sem.semester_id}">${escapeHtml(sem.name)}</option>`)).join(""):""}\n                                        </select>\n                                        <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                    </div>\n                                </div>\n                                <div class="flex justify-end space-x-3">\n                                    <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors">Cancel</button>\n                                    <button type="submit" class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 transition-colors flex items-center justify-center">\n                                        <span>Update Course</span>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                `;document.body.insertAdjacentHTML("beforeend",modalHtml),setupModalCloseEvents(),document.getElementById("courseForm").addEventListener("submit",(function(e){e.preventDefault(),saveCourse()})),document.getElementById("courseCode").value=course.code||"",document.getElementById("courseTitle").value=course.name||"",document.getElementById("courseDepartment").value=course.department_id||"",document.getElementById("courseProgram").value=course.program_id||"",document.getElementById("courseLevel").value=course.level_id||"",document.getElementById("courseSemester").value=course.semester_id||"",document.getElementById("courseCredits").value=course.credit_hours||"",document.getElementById("courseCode").focus()}))})).catch((error=>{console.error("Error loading course:",error),showNotification("Error loading course","error")}))}function deleteCourse(id){Swal.fire({title:"Are you sure?",text:"This will delete the course and may affect related data!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Yes, delete it!"}).then((result=>{result.isConfirmed&&fetch("../../api/admin/settings/courses.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"delete",course_id:id})}).then((response=>response.json())).then((data=>{data.success?(showNotification(data.message||"Course deleted successfully","success"),loadCourses()):showNotification(data.message||"Failed to delete course","error")})).catch((error=>{console.error("Error deleting course:",error),showNotification("Error deleting course","error")}))}))}function loadLevels(){fetch("../../api/admin/settings/levels.php?action=get").then((response=>response.json())).then((data=>{data.success?displayLevels(data.data):showNotification(data.message||"Failed to load levels","error")})).catch((error=>{console.error("Error loading levels:",error),showNotification("Error loading levels","error")}))}function displayLevels(levels){const container=document.getElementById("levels-list");container&&(0!==levels.length?container.innerHTML=levels.map((level=>`\n        <div class="bg-white p-4 rounded-lg border border-gray-200 flex justify-between items-center">\n            <div>\n                <h3 class="font-semibold text-gray-900">${escapeHtml(level.name)}</h3>\n                <p class="text-sm text-gray-500">Level ID: ${level.level_id}</p>\n            </div>\n            <div class="flex space-x-2">\n                <button onclick="editLevel(${level.level_id})" class="text-blue-600 hover:text-blue-800">\n                    <i class="fas fa-edit"></i>\n                </button>\n                <button onclick="deleteLevel(${level.level_id})" class="text-red-600 hover:text-red-800">\n                    <i class="fas fa-trash"></i>\n                </button>\n            </div>\n        </div>\n    `)).join(""):container.innerHTML='<p class="text-gray-500 text-center py-4">No levels found.</p>')}function showAddLevelModal(){document.body.insertAdjacentHTML("beforeend",'\n        <div id="levelModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">\n            <div class="bg-white rounded-lg p-6 w-full max-w-md">\n                <h3 class="text-lg font-semibold text-gray-900 mb-4">Add New Level</h3>\n                <form id="levelForm">\n                    <div class="mb-4">\n                        <label class="block text-sm font-medium text-gray-700 mb-2">Level ID</label>\n                        <input type="number" id="levelId" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500" placeholder="e.g., 100, 200, 300">\n                    </div>\n                    <div class="mb-4">\n                        <label class="block text-sm font-medium text-gray-700 mb-2">Level Name</label>\n                        <input type="text" id="levelName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500" placeholder="e.g., Level 100">\n                    </div>\n                    <div class="flex justify-end space-x-3">\n                        <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300">Cancel</button>\n                        <button type="submit" class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700">Add Level</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    '),document.getElementById("levelForm").addEventListener("submit",(function(e){e.preventDefault(),saveLevel()}))}function saveLevel(){const data={action:currentEditId?"update":"create",level_id:document.getElementById("levelId").value,name:document.getElementById("levelName").value};currentEditId&&(data.old_level_id=currentEditId),fetch("../../api/admin/settings/levels.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(data)}).then((response=>response.json())).then((data=>{data.success?(showNotification(data.message||"Level saved successfully","success"),closeModal(),loadLevels(),currentEditId=null):showNotification(data.message||"Failed to save level","error")})).catch((error=>{console.error("Error saving level:",error),showNotification("Error saving level","error")}))}function editLevel(id){const loadingToast=showNotification("Loading level data...","info",!1);fetch(`../../api/admin/settings/levels.php?action=get&id=${id}`).then((response=>{if(!response.ok)throw new Error(`HTTP error! status: ${response.status}`);return response.json()})).then((data=>{if(loadingToast&&loadingToast.close&&loadingToast.close(),data.success&&data.data){currentEditId=id;const modalHtml='\n                    <div id="levelModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">\n                        <div class="bg-white rounded-lg p-6 w-full max-w-md">\n                            <div class="flex justify-between items-center mb-4">\n                                <h3 class="text-lg font-semibold text-gray-900">Edit Level</h3>\n                                <button type="button" onclick="closeModal()" class="text-gray-400 hover:text-gray-600 focus:outline-none">\n                                    <i class="fas fa-times"></i>\n                                </button>\n                            </div>\n                            <form id="levelForm">\n                                <div class="mb-4">\n                                    <label class="block text-sm font-medium text-gray-700 mb-2">Level ID</label>\n                                    <input type="number" id="levelId" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500" placeholder="e.g., 100, 200, 300">\n                                    <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                </div>\n                                <div class="mb-4">\n                                    <label class="block text-sm font-medium text-gray-700 mb-2">Level Name</label>\n                                    <input type="text" id="levelName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500" placeholder="e.g., Level 100">\n                                    <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                </div>\n                                <div class="flex justify-end space-x-3">\n                                    <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors">Cancel</button>\n                                    <button type="submit" class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 transition-colors flex items-center justify-center">\n                                        <span>Update Level</span>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                ';document.body.insertAdjacentHTML("beforeend",modalHtml),setupModalCloseEvents(),document.getElementById("levelForm").addEventListener("submit",(function(e){e.preventDefault(),saveLevel()})),document.getElementById("levelId").value=data.data.level_id||"",document.getElementById("levelName").value=data.data.name||"",document.getElementById("levelId").focus()}else showNotification(data.message||"Level not found","error")})).catch((error=>{console.error("Error loading level:",error),showNotification("Error loading level","error")}))}function deleteLevel(id){Swal.fire({title:"Are you sure?",text:"This will delete the level and may affect related data!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Yes, delete it!"}).then((result=>{result.isConfirmed&&fetch("../../api/admin/settings/levels.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"delete",level_id:id})}).then((response=>response.json())).then((data=>{data.success?(showNotification(data.message||"Level deleted successfully","success"),loadLevels()):showNotification(data.message||"Failed to delete level","error")})).catch((error=>{console.error("Error deleting level:",error),showNotification("Error deleting level","error")}))}))}function loadSemesters(){fetch("../../api/admin/settings/semesters.php?action=get").then((response=>response.json())).then((data=>{data.success?displaySemesters(data.data):showNotification(data.message||"Failed to load semesters","error")})).catch((error=>{console.error("Error loading semesters:",error),showNotification("Error loading semesters","error")}))}function displaySemesters(semesters){const container=document.getElementById("semesters-list");container&&(0!==semesters.length?container.innerHTML=semesters.map((semester=>`\n        <div class="bg-white p-4 rounded-lg border border-gray-200 flex justify-between items-center">\n            <div>\n                <h3 class="font-semibold text-gray-900">${escapeHtml(semester.name)}</h3>\n                <p class="text-sm text-gray-500">\n                    ${semester.start_date?`Start: ${semester.start_date}`:""} \n                    ${semester.end_date?`| End: ${semester.end_date}`:""}\n                </p>\n            </div>\n            <div class="flex space-x-2">\n                <button onclick="editSemester(${semester.semester_id})" class="text-blue-600 hover:text-blue-800">\n                    <i class="fas fa-edit"></i>\n                </button>\n                <button onclick="deleteSemester(${semester.semester_id})" class="text-red-600 hover:text-red-800">\n                    <i class="fas fa-trash"></i>\n                </button>\n            </div>\n        </div>\n    `)).join(""):container.innerHTML='<p class="text-gray-500 text-center py-4">No semesters found.</p>')}function showAddSemesterModal(){document.body.insertAdjacentHTML("beforeend",'\n        <div id="semesterModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">\n            <div class="bg-white rounded-lg p-6 w-full max-w-md">\n                <h3 class="text-lg font-semibold text-gray-900 mb-4">Add New Semester</h3>\n                <form id="semesterForm">\n                    <div class="mb-4">\n                        <label class="block text-sm font-medium text-gray-700 mb-2">Semester Name</label>\n                        <input type="text" id="semesterName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500" placeholder="e.g., Fall 2024">\n                    </div>\n                    <div class="mb-4">\n                        <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>\n                        <input type="date" id="semesterStartDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                    </div>\n                    <div class="mb-4">\n                        <label class="block text-sm font-medium text-gray-700 mb-2">End Date</label>\n                        <input type="date" id="semesterEndDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                    </div>\n                    <div class="flex justify-end space-x-3">\n                        <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300">Cancel</button>\n                        <button type="submit" class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700">Add Semester</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    '),document.getElementById("semesterForm").addEventListener("submit",(function(e){e.preventDefault(),saveSemester()}))}function saveSemester(){const data={action:currentEditId?"update":"create",name:document.getElementById("semesterName").value,start_date:document.getElementById("semesterStartDate").value||null,end_date:document.getElementById("semesterEndDate").value||null};currentEditId&&(data.semester_id=currentEditId),fetch("../../api/admin/settings/semesters.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(data)}).then((response=>response.json())).then((data=>{data.success?(showNotification(data.message||"Semester saved successfully","success"),closeModal(),loadSemesters(),currentEditId=null):showNotification(data.message||"Failed to save semester","error")})).catch((error=>{console.error("Error saving semester:",error),showNotification("Error saving semester","error")}))}function editSemester(id){const loadingToast=showNotification("Loading semester data...","info",!1);fetch(`../../api/admin/settings/semesters.php?action=get&id=${id}`).then((response=>{if(!response.ok)throw new Error(`HTTP error! status: ${response.status}`);return response.json()})).then((data=>{if(loadingToast&&loadingToast.close&&loadingToast.close(),data.success&&data.data){currentEditId=id;const modalHtml='\n                    <div id="semesterModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">\n                        <div class="bg-white rounded-lg p-6 w-full max-w-md">\n                            <div class="flex justify-between items-center mb-4">\n                                <h3 class="text-lg font-semibold text-gray-900">Edit Semester</h3>\n                                <button type="button" onclick="closeModal()" class="text-gray-400 hover:text-gray-600 focus:outline-none">\n                                    <i class="fas fa-times"></i>\n                                </button>\n                            </div>\n                            <form id="semesterForm">\n                                <div class="mb-4">\n                                    <label class="block text-sm font-medium text-gray-700 mb-2">Semester Name</label>\n                                    <input type="text" id="semesterName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500" placeholder="e.g., Fall 2024">\n                                    <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                </div>\n                                <div class="mb-4">\n                                    <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>\n                                    <input type="date" id="semesterStartDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                    <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                </div>\n                                <div class="mb-4">\n                                    <label class="block text-sm font-medium text-gray-700 mb-2">End Date</label>\n                                    <input type="date" id="semesterEndDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500">\n                                    <div class="error-feedback text-red-500 text-sm mt-1 hidden"></div>\n                                </div>\n                                <div class="flex justify-end space-x-3">\n                                    <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors">Cancel</button>\n                                    <button type="submit" class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 transition-colors flex items-center justify-center">\n                                        <span>Update Semester</span>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                ';document.body.insertAdjacentHTML("beforeend",modalHtml),setupModalCloseEvents(),document.getElementById("semesterForm").addEventListener("submit",(function(e){e.preventDefault(),saveSemester()}));const nameInput=document.getElementById("semesterName"),startDateInput=document.getElementById("semesterStartDate"),endDateInput=document.getElementById("semesterEndDate");nameInput.value=data.data.name||"",startDateInput.value=data.data.start_date||"",endDateInput.value=data.data.end_date||"",nameInput.focus()}else showNotification(data.message||"Semester not found","error")})).catch((error=>{console.error("Error loading semester:",error),showNotification("Error loading semester","error")}))}function deleteSemester(id){Swal.fire({title:"Are you sure?",text:"This will delete the semester and may affect related data!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Yes, delete it!"}).then((result=>{result.isConfirmed&&fetch("../../api/admin/settings/semesters.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"delete",semester_id:id})}).then((response=>response.json())).then((data=>{data.success?(showNotification(data.message||"Semester deleted successfully","success"),loadSemesters()):showNotification(data.message||"Failed to delete semester","error")})).catch((error=>{console.error("Error deleting semester:",error),showNotification("Error deleting semester","error")}))}))}function closeModal(){document.querySelectorAll('[id$="Modal"]').forEach((modal=>modal.remove())),currentEditId=null,document.removeEventListener("keydown",handleEscKeyForModal)}function handleEscKeyForModal(e){"Escape"===e.key&&closeModal()}function setupModalCloseEvents(){document.addEventListener("keydown",handleEscKeyForModal)}function setupModalCloseEvents(){document.addEventListener("keydown",handleEscKeyForModal);document.querySelectorAll('[id$="Modal"]').forEach((modal=>{modal.addEventListener("click",(function(e){e.target===modal&&closeModal()}))}))}function showNotification(message,type="info",autoClose=!0){if(window.Toast){return window.Toast.fire({icon:type,title:message,timer:autoClose?3e3:void 0,showConfirmButton:!autoClose})}return alert(message),null}function escapeHtml(text){if(null==text)return"";const map={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return String(text).replace(/[&<>"']/g,(function(m){return map[m]}))}async function performBackup(){try{Swal.fire({title:"Creating Backup...",text:"Please wait while we create a backup of your database",allowOutsideClick:!1,didOpen:()=>{Swal.showLoading()}});const response=await axios.post("../../api/admin/settings/backup_simple.php");if(!response.data.success)throw new Error(response.data.message);Swal.fire({title:"Success!",text:`Database backup created successfully: ${response.data.filename}`,icon:"success",confirmButtonColor:"#10b981"})}catch(error){console.error("Error creating backup:",error),Swal.fire({title:"Error",text:error.response?.data?.message||"Failed to create backup",icon:"error",confirmButtonColor:"#ef4444"})}}window.performBackup=performBackup,window.showTab=showTab,window.showAddDepartmentModal=showAddDepartmentModal,window.showAddProgramModal=showAddProgramModal,window.showAddCourseModal=showAddCourseModal,window.showAddLevelModal=showAddLevelModal,window.showAddSemesterModal=showAddSemesterModal,window.editDepartment=editDepartment,window.deleteDepartment=deleteDepartment,window.editProgram=editProgram,window.deleteProgram=deleteProgram,window.editCourse=editCourse,window.deleteCourse=deleteCourse,window.editLevel=editLevel,window.deleteLevel=deleteLevel,window.editSemester=editSemester,window.deleteSemester=deleteSemester,window.closeModal=closeModal;